---
# tasks file for roles/common
- name: Update package cache
  become: true
  apt:
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Install required packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop:
    - apache2
    - php
    - libapache2-mod-php
    - build-essential
    - libgd-dev
    - unzip
    - openssl
  when: ansible_os_family == 'Debian'

- name: Update package cache
  become: true
  yum:
    name: '*'
    state: latest
  when: ansible_os_family == 'RedHat'

- name: Install required packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop:
    - httpd
    - php
    - gcc
    - glibc
    - glibc-common
    - gd
    - gd-devel
    - make
    - net-snmp
    - unzip
    - openssl
  when: ansible_os_family == 'RedHat'

  - name: Download Nagios source
  get_url:
    url: "https://downloads.sourceforge.net/project/nagios/nagios-{{ nagios_version }}/nagios-{{ nagios_version }}.tar.gz"
    dest: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}.tar.gz"
  vars:
    nagios_version: "4.4.6"
    nagios_download_dir: "/tmp"

- name: Extract Nagios source
  become: true
  ansible.builtin.unarchive:
    src: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}.tar.gz"
    dest: "{{ nagios_download_dir }}"

- name: Configure and install Nagios
  become: true
  ansible.builtin.command: "cd {{ nagios_download_dir }}/nagios-{{ nagios_version }} && ./configure --with-httpd-conf=/etc/httpd/conf.d && make all"
  args:
    creates: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}/base/nagios"
    
- name: Create Nagios user and group
  become: true
  ansible.builtin.user:
    name: nagios
    system: yes

- name: Install Nagios binaries and HTML files
  become: true
  ansible.builtin.command: "cd {{ nagios_download_dir }}/nagios-{{ nagios_version }} && make install"
  args:
    creates: "/usr/local/nagios/bin/nagios"

- name: Install Nagios service init scripts
  become: true
  ansible.builtin.command: "make install-init"
  args:
    chdir: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}"

- name: Install Nagios service configuration files
  become: true
  ansible.builtin.command: "make install-config"
  args:
    chdir: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}"

- name: Install Nagios Apache config files
  become: true
  ansible.builtin.command: "make install-webconf"
  args:
    chdir: "{{ nagios_download_dir }}/nagios-{{ nagios_version }}"

- name: Set Nagios service to start on boot
  become: true
  ansible.builtin.command: "systemctl enable nagios"

- name: Start Nagios service
  become: true
  ansible.builtin.service:
    name: nagios
    state: started
